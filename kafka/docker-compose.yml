version: "3.8"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 4
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  inventory-service-1:
    build:
      context: ./services/inventory_service
      dockerfile: Dockerfile
    environment:
      KAFKA_BROKER: kafka:9092
    depends_on:
      kafka:
        condition: service_healthy

  inventory-service-2:
    build:
      context: ./services/inventory_service
      dockerfile: Dockerfile
    environment:
      KAFKA_BROKER: kafka:9092
    depends_on:
      kafka:
        condition: service_healthy

  inventory-service-3:
    build:
      context: ./services/inventory_service
      dockerfile: Dockerfile
    environment:
      KAFKA_BROKER: kafka:9092
    depends_on:
      kafka:
        condition: service_healthy

  user-service-1:
    build:
      context: ./services/user_service
      dockerfile: Dockerfile
    environment:
      KAFKA_BROKER: kafka:9092
    depends_on:
      kafka:
        condition: service_healthy

  user-service-2:
    build:
      context: ./services/user_service
      dockerfile: Dockerfile
    environment:
      KAFKA_BROKER: kafka:9092
    depends_on:
      kafka:
        condition: service_healthy

  user-service-3:
    build:
      context: ./services/user_service
      dockerfile: Dockerfile
    environment:
      KAFKA_BROKER: kafka:9092
    depends_on:
      kafka:
        condition: service_healthy

  payment-service-1:
    build:
      context: ./services/payment_service
      dockerfile: Dockerfile
    environment:
      KAFKA_BROKER: kafka:9092
    depends_on:
      kafka:
        condition: service_healthy

  payment-service-2:
    build:
      context: ./services/payment_service
      dockerfile: Dockerfile
    environment:
      KAFKA_BROKER: kafka:9092
    depends_on:
      kafka:
        condition: service_healthy

  payment-service-3:
    build:
      context: ./services/payment_service
      dockerfile: Dockerfile
    environment:
      KAFKA_BROKER: kafka:9092
    depends_on:
      kafka:
        condition: service_healthy

  order-service-1:
    build:
      context: ./services/order_service
      dockerfile: Dockerfile
    environment:
      KAFKA_BROKER: kafka:9092
    depends_on:
      kafka:
        condition: service_healthy

  order-service-2:
    build:
      context: ./services/order_service
      dockerfile: Dockerfile
    environment:
      KAFKA_BROKER: kafka:9092
    depends_on:
      kafka:
        condition: service_healthy

  order-service-3:
    build:
      context: ./services/order_service
      dockerfile: Dockerfile
    environment:
      KAFKA_BROKER: kafka:9092
    depends_on:
      kafka:
        condition: service_healthy

  monitor_part1:
    build:
      context: ./monitoring_app
      dockerfile: Dockerfile
    environment:
      KAFKA_BROKER: kafka:9092
      TOPICS: "user-topic"
    depends_on:
      kafka:
        condition: service_healthy

  monitor_part2:
    build:
      context: ./monitoring_app
      dockerfile: Dockerfile
    environment:
      KAFKA_BROKER: kafka:9092
      TOPICS: "inventory-topic,order-topic"
    depends_on:
      kafka:
        condition: service_healthy

  monitor_part3:
    build:
      context: ./monitoring_app
      dockerfile: Dockerfile
    environment:
      KAFKA_BROKER: kafka:9092
      TOPICS: "order-topic,payment-topic"
    depends_on:
      kafka:
        condition: service_healthy

  monitor_part4:
    build:
      context: ./monitoring_app
      dockerfile: Dockerfile
    environment:
      KAFKA_BROKER: kafka:9092
      TOPICS: "order-topic,payment-topic,inventory-topic,user-topic"
    depends_on:
      kafka:
        condition: service_healthy
